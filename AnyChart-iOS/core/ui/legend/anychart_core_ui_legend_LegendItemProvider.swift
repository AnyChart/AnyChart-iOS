// typedef
extension anychart.core.ui.legend {
    public class LegendItemProvider: JsObject {

        
    public init(disabled: Bool, iconEnabled: Bool, iconFill: anychart.graphics.vector.Fill, iconHatchFill: anychart.graphics.vector.hatchfill.HatchFillType, iconMarkerFill: anychart.graphics.vector.Fill, iconMarkerStroke: anychart.graphics.vector.Stroke, iconMarkerType: anychart.enums.MarkerType, iconStroke: anychart.graphics.vector.Stroke, iconTextSpacing: Double, iconType: anychart.enums.LegendItemIconType, index: Double, meta: String, text: String) {
        js.append(String(format: "{disabled:%s, iconEnabled: %s, iconFill: %s, iconHatchFill: %s, iconMarkerFill: %s, iconMarkerStroke: %s, iconMarkerType: %s, iconStroke: %s, iconTextSpacing: %s, iconType: %s, index: %s, meta: %s, text: %s, } ", disabled, iconEnabled, (iconFill != nil) ? iconFill.getJsBase() : "null", (iconHatchFill != nil) ? iconHatchFill.getJsBase() : "null", (iconMarkerFill != nil) ? iconMarkerFill.getJsBase() : "null", (iconMarkerStroke != nil) ? iconMarkerStroke.getJsBase() : "null", (iconMarkerType != nil) ? iconMarkerType.getJsBase() : "null", (iconStroke != nil) ? iconStroke.getJsBase() : "null", iconTextSpacing, (iconType != nil) ? iconType.getJsBase() : "null", index, JsObject.wrapQuotes(value: meta), JsObject.wrapQuotes(value: text)))
    }
    public init(disabled: Bool, iconEnabled: Bool, iconFill: anychart.graphics.vector.Fill, iconHatchFill: anychart.graphics.vector.hatchfill.HatchFillType, iconMarkerFill: anychart.graphics.vector.Fill, iconMarkerStroke: anychart.graphics.vector.Stroke, iconMarkerType: anychart.enums.MarkerType, iconStroke: anychart.graphics.vector.Stroke, iconTextSpacing: Double, iconType: String, index: Double, meta: String, text: String) {
        js.append(String(format: "{disabled:%s, iconEnabled: %s, iconFill: %s, iconHatchFill: %s, iconMarkerFill: %s, iconMarkerStroke: %s, iconMarkerType: %s, iconStroke: %s, iconTextSpacing: %s, iconType: %s, index: %s, meta: %s, text: %s, } ", disabled, iconEnabled, (iconFill != nil) ? iconFill.getJsBase() : "null", (iconHatchFill != nil) ? iconHatchFill.getJsBase() : "null", (iconMarkerFill != nil) ? iconMarkerFill.getJsBase() : "null", (iconMarkerStroke != nil) ? iconMarkerStroke.getJsBase() : "null", (iconMarkerType != nil) ? iconMarkerType.getJsBase() : "null", (iconStroke != nil) ? iconStroke.getJsBase() : "null", iconTextSpacing, JsObject.wrapQuotes(value: iconType), index, JsObject.wrapQuotes(value: meta), JsObject.wrapQuotes(value: text)))
    }
    public init(disabled: Bool, iconEnabled: Bool, iconFill: anychart.graphics.vector.Fill, iconHatchFill: anychart.graphics.vector.hatchfill.HatchFillType, iconMarkerFill: anychart.graphics.vector.Fill, iconMarkerStroke: anychart.graphics.vector.Stroke, iconMarkerType: String, iconStroke: anychart.graphics.vector.Stroke, iconTextSpacing: Double, iconType: anychart.enums.LegendItemIconType, index: Double, meta: String, text: String) {
        js.append(String(format: "{disabled:%s, iconEnabled: %s, iconFill: %s, iconHatchFill: %s, iconMarkerFill: %s, iconMarkerStroke: %s, iconMarkerType: %s, iconStroke: %s, iconTextSpacing: %s, iconType: %s, index: %s, meta: %s, text: %s, } ", disabled, iconEnabled, (iconFill != nil) ? iconFill.getJsBase() : "null", (iconHatchFill != nil) ? iconHatchFill.getJsBase() : "null", (iconMarkerFill != nil) ? iconMarkerFill.getJsBase() : "null", (iconMarkerStroke != nil) ? iconMarkerStroke.getJsBase() : "null", JsObject.wrapQuotes(value: iconMarkerType), (iconStroke != nil) ? iconStroke.getJsBase() : "null", iconTextSpacing, (iconType != nil) ? iconType.getJsBase() : "null", index, JsObject.wrapQuotes(value: meta), JsObject.wrapQuotes(value: text)))
    }
    public init(disabled: Bool, iconEnabled: Bool, iconFill: anychart.graphics.vector.Fill, iconHatchFill: anychart.graphics.vector.hatchfill.HatchFillType, iconMarkerFill: anychart.graphics.vector.Fill, iconMarkerStroke: anychart.graphics.vector.Stroke, iconMarkerType: String, iconStroke: anychart.graphics.vector.Stroke, iconTextSpacing: Double, iconType: String, index: Double, meta: String, text: String) {
        js.append(String(format: "{disabled:%s, iconEnabled: %s, iconFill: %s, iconHatchFill: %s, iconMarkerFill: %s, iconMarkerStroke: %s, iconMarkerType: %s, iconStroke: %s, iconTextSpacing: %s, iconType: %s, index: %s, meta: %s, text: %s, } ", disabled, iconEnabled, (iconFill != nil) ? iconFill.getJsBase() : "null", (iconHatchFill != nil) ? iconHatchFill.getJsBase() : "null", (iconMarkerFill != nil) ? iconMarkerFill.getJsBase() : "null", (iconMarkerStroke != nil) ? iconMarkerStroke.getJsBase() : "null", JsObject.wrapQuotes(value: iconMarkerType), (iconStroke != nil) ? iconStroke.getJsBase() : "null", iconTextSpacing, JsObject.wrapQuotes(value: iconType), index, JsObject.wrapQuotes(value: meta), JsObject.wrapQuotes(value: text)))
    }
    public init(disabled: Bool, iconEnabled: Bool, iconFill: anychart.graphics.vector.Fill, iconHatchFill: anychart.graphics.vector.PatternFill, iconMarkerFill: anychart.graphics.vector.Fill, iconMarkerStroke: anychart.graphics.vector.Stroke, iconMarkerType: anychart.enums.MarkerType, iconStroke: anychart.graphics.vector.Stroke, iconTextSpacing: Double, iconType: anychart.enums.LegendItemIconType, index: Double, meta: String, text: String) {
        js.append(String(format: "{disabled:%s, iconEnabled: %s, iconFill: %s, iconHatchFill: %s, iconMarkerFill: %s, iconMarkerStroke: %s, iconMarkerType: %s, iconStroke: %s, iconTextSpacing: %s, iconType: %s, index: %s, meta: %s, text: %s, } ", disabled, iconEnabled, (iconFill != nil) ? iconFill.getJsBase() : "null", (iconHatchFill != nil) ? iconHatchFill.getJsBase() : "null", (iconMarkerFill != nil) ? iconMarkerFill.getJsBase() : "null", (iconMarkerStroke != nil) ? iconMarkerStroke.getJsBase() : "null", (iconMarkerType != nil) ? iconMarkerType.getJsBase() : "null", (iconStroke != nil) ? iconStroke.getJsBase() : "null", iconTextSpacing, (iconType != nil) ? iconType.getJsBase() : "null", index, JsObject.wrapQuotes(value: meta), JsObject.wrapQuotes(value: text)))
    }
    public init(disabled: Bool, iconEnabled: Bool, iconFill: anychart.graphics.vector.Fill, iconHatchFill: anychart.graphics.vector.PatternFill, iconMarkerFill: anychart.graphics.vector.Fill, iconMarkerStroke: anychart.graphics.vector.Stroke, iconMarkerType: anychart.enums.MarkerType, iconStroke: anychart.graphics.vector.Stroke, iconTextSpacing: Double, iconType: String, index: Double, meta: String, text: String) {
        js.append(String(format: "{disabled:%s, iconEnabled: %s, iconFill: %s, iconHatchFill: %s, iconMarkerFill: %s, iconMarkerStroke: %s, iconMarkerType: %s, iconStroke: %s, iconTextSpacing: %s, iconType: %s, index: %s, meta: %s, text: %s, } ", disabled, iconEnabled, (iconFill != nil) ? iconFill.getJsBase() : "null", (iconHatchFill != nil) ? iconHatchFill.getJsBase() : "null", (iconMarkerFill != nil) ? iconMarkerFill.getJsBase() : "null", (iconMarkerStroke != nil) ? iconMarkerStroke.getJsBase() : "null", (iconMarkerType != nil) ? iconMarkerType.getJsBase() : "null", (iconStroke != nil) ? iconStroke.getJsBase() : "null", iconTextSpacing, JsObject.wrapQuotes(value: iconType), index, JsObject.wrapQuotes(value: meta), JsObject.wrapQuotes(value: text)))
    }
    public init(disabled: Bool, iconEnabled: Bool, iconFill: anychart.graphics.vector.Fill, iconHatchFill: anychart.graphics.vector.PatternFill, iconMarkerFill: anychart.graphics.vector.Fill, iconMarkerStroke: anychart.graphics.vector.Stroke, iconMarkerType: String, iconStroke: anychart.graphics.vector.Stroke, iconTextSpacing: Double, iconType: anychart.enums.LegendItemIconType, index: Double, meta: String, text: String) {
        js.append(String(format: "{disabled:%s, iconEnabled: %s, iconFill: %s, iconHatchFill: %s, iconMarkerFill: %s, iconMarkerStroke: %s, iconMarkerType: %s, iconStroke: %s, iconTextSpacing: %s, iconType: %s, index: %s, meta: %s, text: %s, } ", disabled, iconEnabled, (iconFill != nil) ? iconFill.getJsBase() : "null", (iconHatchFill != nil) ? iconHatchFill.getJsBase() : "null", (iconMarkerFill != nil) ? iconMarkerFill.getJsBase() : "null", (iconMarkerStroke != nil) ? iconMarkerStroke.getJsBase() : "null", JsObject.wrapQuotes(value: iconMarkerType), (iconStroke != nil) ? iconStroke.getJsBase() : "null", iconTextSpacing, (iconType != nil) ? iconType.getJsBase() : "null", index, JsObject.wrapQuotes(value: meta), JsObject.wrapQuotes(value: text)))
    }
    public init(disabled: Bool, iconEnabled: Bool, iconFill: anychart.graphics.vector.Fill, iconHatchFill: anychart.graphics.vector.PatternFill, iconMarkerFill: anychart.graphics.vector.Fill, iconMarkerStroke: anychart.graphics.vector.Stroke, iconMarkerType: String, iconStroke: anychart.graphics.vector.Stroke, iconTextSpacing: Double, iconType: String, index: Double, meta: String, text: String) {
        js.append(String(format: "{disabled:%s, iconEnabled: %s, iconFill: %s, iconHatchFill: %s, iconMarkerFill: %s, iconMarkerStroke: %s, iconMarkerType: %s, iconStroke: %s, iconTextSpacing: %s, iconType: %s, index: %s, meta: %s, text: %s, } ", disabled, iconEnabled, (iconFill != nil) ? iconFill.getJsBase() : "null", (iconHatchFill != nil) ? iconHatchFill.getJsBase() : "null", (iconMarkerFill != nil) ? iconMarkerFill.getJsBase() : "null", (iconMarkerStroke != nil) ? iconMarkerStroke.getJsBase() : "null", JsObject.wrapQuotes(value: iconMarkerType), (iconStroke != nil) ? iconStroke.getJsBase() : "null", iconTextSpacing, JsObject.wrapQuotes(value: iconType), index, JsObject.wrapQuotes(value: meta), JsObject.wrapQuotes(value: text)))
    }
    public init(disabled: Bool, iconEnabled: Bool, iconFill: anychart.graphics.vector.Fill, iconHatchFill: anychart.graphics.vector.HatchFill, iconMarkerFill: anychart.graphics.vector.Fill, iconMarkerStroke: anychart.graphics.vector.Stroke, iconMarkerType: anychart.enums.MarkerType, iconStroke: anychart.graphics.vector.Stroke, iconTextSpacing: Double, iconType: anychart.enums.LegendItemIconType, index: Double, meta: String, text: String) {
        js.append(String(format: "{disabled:%s, iconEnabled: %s, iconFill: %s, iconHatchFill: %s, iconMarkerFill: %s, iconMarkerStroke: %s, iconMarkerType: %s, iconStroke: %s, iconTextSpacing: %s, iconType: %s, index: %s, meta: %s, text: %s, } ", disabled, iconEnabled, (iconFill != nil) ? iconFill.getJsBase() : "null", (iconHatchFill != nil) ? iconHatchFill.getJsBase() : "null", (iconMarkerFill != nil) ? iconMarkerFill.getJsBase() : "null", (iconMarkerStroke != nil) ? iconMarkerStroke.getJsBase() : "null", (iconMarkerType != nil) ? iconMarkerType.getJsBase() : "null", (iconStroke != nil) ? iconStroke.getJsBase() : "null", iconTextSpacing, (iconType != nil) ? iconType.getJsBase() : "null", index, JsObject.wrapQuotes(value: meta), JsObject.wrapQuotes(value: text)))
    }
    public init(disabled: Bool, iconEnabled: Bool, iconFill: anychart.graphics.vector.Fill, iconHatchFill: anychart.graphics.vector.HatchFill, iconMarkerFill: anychart.graphics.vector.Fill, iconMarkerStroke: anychart.graphics.vector.Stroke, iconMarkerType: anychart.enums.MarkerType, iconStroke: anychart.graphics.vector.Stroke, iconTextSpacing: Double, iconType: String, index: Double, meta: String, text: String) {
        js.append(String(format: "{disabled:%s, iconEnabled: %s, iconFill: %s, iconHatchFill: %s, iconMarkerFill: %s, iconMarkerStroke: %s, iconMarkerType: %s, iconStroke: %s, iconTextSpacing: %s, iconType: %s, index: %s, meta: %s, text: %s, } ", disabled, iconEnabled, (iconFill != nil) ? iconFill.getJsBase() : "null", (iconHatchFill != nil) ? iconHatchFill.getJsBase() : "null", (iconMarkerFill != nil) ? iconMarkerFill.getJsBase() : "null", (iconMarkerStroke != nil) ? iconMarkerStroke.getJsBase() : "null", (iconMarkerType != nil) ? iconMarkerType.getJsBase() : "null", (iconStroke != nil) ? iconStroke.getJsBase() : "null", iconTextSpacing, JsObject.wrapQuotes(value: iconType), index, JsObject.wrapQuotes(value: meta), JsObject.wrapQuotes(value: text)))
    }
    public init(disabled: Bool, iconEnabled: Bool, iconFill: anychart.graphics.vector.Fill, iconHatchFill: anychart.graphics.vector.HatchFill, iconMarkerFill: anychart.graphics.vector.Fill, iconMarkerStroke: anychart.graphics.vector.Stroke, iconMarkerType: String, iconStroke: anychart.graphics.vector.Stroke, iconTextSpacing: Double, iconType: anychart.enums.LegendItemIconType, index: Double, meta: String, text: String) {
        js.append(String(format: "{disabled:%s, iconEnabled: %s, iconFill: %s, iconHatchFill: %s, iconMarkerFill: %s, iconMarkerStroke: %s, iconMarkerType: %s, iconStroke: %s, iconTextSpacing: %s, iconType: %s, index: %s, meta: %s, text: %s, } ", disabled, iconEnabled, (iconFill != nil) ? iconFill.getJsBase() : "null", (iconHatchFill != nil) ? iconHatchFill.getJsBase() : "null", (iconMarkerFill != nil) ? iconMarkerFill.getJsBase() : "null", (iconMarkerStroke != nil) ? iconMarkerStroke.getJsBase() : "null", JsObject.wrapQuotes(value: iconMarkerType), (iconStroke != nil) ? iconStroke.getJsBase() : "null", iconTextSpacing, (iconType != nil) ? iconType.getJsBase() : "null", index, JsObject.wrapQuotes(value: meta), JsObject.wrapQuotes(value: text)))
    }
    public init(disabled: Bool, iconEnabled: Bool, iconFill: anychart.graphics.vector.Fill, iconHatchFill: anychart.graphics.vector.HatchFill, iconMarkerFill: anychart.graphics.vector.Fill, iconMarkerStroke: anychart.graphics.vector.Stroke, iconMarkerType: String, iconStroke: anychart.graphics.vector.Stroke, iconTextSpacing: Double, iconType: String, index: Double, meta: String, text: String) {
        js.append(String(format: "{disabled:%s, iconEnabled: %s, iconFill: %s, iconHatchFill: %s, iconMarkerFill: %s, iconMarkerStroke: %s, iconMarkerType: %s, iconStroke: %s, iconTextSpacing: %s, iconType: %s, index: %s, meta: %s, text: %s, } ", disabled, iconEnabled, (iconFill != nil) ? iconFill.getJsBase() : "null", (iconHatchFill != nil) ? iconHatchFill.getJsBase() : "null", (iconMarkerFill != nil) ? iconMarkerFill.getJsBase() : "null", (iconMarkerStroke != nil) ? iconMarkerStroke.getJsBase() : "null", JsObject.wrapQuotes(value: iconMarkerType), (iconStroke != nil) ? iconStroke.getJsBase() : "null", iconTextSpacing, JsObject.wrapQuotes(value: iconType), index, JsObject.wrapQuotes(value: meta), JsObject.wrapQuotes(value: text)))
    }

        public func getJsBase() -> String {
            return js
        }

    }
}