// typedef
extension anychart.core.annotations {
    public class AnnotationJSONFormat: JsObject {

        
        public init(allowEdit: Bool, anchor: anychart.enums.Anchor, color: AnyColor, fill: Fill, grid: Stroke, hatchFill: anychart.graphics.vector.PatternFill, hoverGap: Double, hovered: anychart.core.StateSettings, markerType: anychart.enums.MarkerType, offsetX: Double, offsetY: Double, secondValueAnchor: Double, secondXAnchor: Double, selected: anychart.core.StateSettings, size: Double, stroke: Stroke, thirdValueAnchor: Double, thirdXAnchor: Double, trend: Stroke, type: String, valueAnchor: Double, xAnchor: Double) {
            super.init()

            js.append("\(allowEdit), \((anchor != nil) ? anchor.getJsBase() : "null"), \((color != nil) ? color.getJsBase() : "null"), \((fill != nil) ? fill.getJsBase() : "null"), \((grid != nil) ? grid.getJsBase() : "null"), \((hatchFill != nil) ? hatchFill.getJsBase() : "null"), \(hoverGap), \((hovered != nil) ? hovered.getJsBase() : "null"), \((markerType != nil) ? markerType.getJsBase() : "null"), \(offsetX), \(offsetY), \(secondValueAnchor), \(secondXAnchor), \((selected != nil) ? selected.getJsBase() : "null"), \(size), \((stroke != nil) ? stroke.getJsBase() : "null"), \(thirdValueAnchor), \(thirdXAnchor), \((trend != nil) ? trend.getJsBase() : "null"), \(JsObject.wrapQuotes(value: type)), \(valueAnchor), \(xAnchor)")
        }
        public init(allowEdit: Bool, anchor: anychart.enums.Anchor, color: AnyColor, fill: Fill, grid: Stroke, hatchFill: anychart.graphics.vector.PatternFill, hoverGap: Double, hovered: anychart.core.StateSettings, markerType: anychart.enums.MarkerType, offsetX: Double, offsetY: Double, secondValueAnchor: Double, secondXAnchor: Double, selected: anychart.core.StateSettings, size: Double, stroke: Stroke, thirdValueAnchor: Double, thirdXAnchor: Double, trend: Stroke, type: anychart.enums.AnnotationTypes, valueAnchor: Double, xAnchor: Double) {
            super.init()

            js.append("\(allowEdit), \((anchor != nil) ? anchor.getJsBase() : "null"), \((color != nil) ? color.getJsBase() : "null"), \((fill != nil) ? fill.getJsBase() : "null"), \((grid != nil) ? grid.getJsBase() : "null"), \((hatchFill != nil) ? hatchFill.getJsBase() : "null"), \(hoverGap), \((hovered != nil) ? hovered.getJsBase() : "null"), \((markerType != nil) ? markerType.getJsBase() : "null"), \(offsetX), \(offsetY), \(secondValueAnchor), \(secondXAnchor), \((selected != nil) ? selected.getJsBase() : "null"), \(size), \((stroke != nil) ? stroke.getJsBase() : "null"), \(thirdValueAnchor), \(thirdXAnchor), \((trend != nil) ? trend.getJsBase() : "null"), \((type != nil) ? type.getJsBase() : "null"), \(valueAnchor), \(xAnchor)")
        }
        public init(allowEdit: Bool, anchor: anychart.enums.Anchor, color: AnyColor, fill: Fill, grid: Stroke, hatchFill: anychart.graphics.vector.PatternFill, hoverGap: Double, hovered: anychart.core.StateSettings, markerType: String, offsetX: Double, offsetY: Double, secondValueAnchor: Double, secondXAnchor: Double, selected: anychart.core.StateSettings, size: Double, stroke: Stroke, thirdValueAnchor: Double, thirdXAnchor: Double, trend: Stroke, type: String, valueAnchor: Double, xAnchor: Double) {
            super.init()

            js.append("\(allowEdit), \((anchor != nil) ? anchor.getJsBase() : "null"), \((color != nil) ? color.getJsBase() : "null"), \((fill != nil) ? fill.getJsBase() : "null"), \((grid != nil) ? grid.getJsBase() : "null"), \((hatchFill != nil) ? hatchFill.getJsBase() : "null"), \(hoverGap), \((hovered != nil) ? hovered.getJsBase() : "null"), \(JsObject.wrapQuotes(value: markerType)), \(offsetX), \(offsetY), \(secondValueAnchor), \(secondXAnchor), \((selected != nil) ? selected.getJsBase() : "null"), \(size), \((stroke != nil) ? stroke.getJsBase() : "null"), \(thirdValueAnchor), \(thirdXAnchor), \((trend != nil) ? trend.getJsBase() : "null"), \(JsObject.wrapQuotes(value: type)), \(valueAnchor), \(xAnchor)")
        }
        public init(allowEdit: Bool, anchor: anychart.enums.Anchor, color: AnyColor, fill: Fill, grid: Stroke, hatchFill: anychart.graphics.vector.PatternFill, hoverGap: Double, hovered: anychart.core.StateSettings, markerType: String, offsetX: Double, offsetY: Double, secondValueAnchor: Double, secondXAnchor: Double, selected: anychart.core.StateSettings, size: Double, stroke: Stroke, thirdValueAnchor: Double, thirdXAnchor: Double, trend: Stroke, type: anychart.enums.AnnotationTypes, valueAnchor: Double, xAnchor: Double) {
            super.init()

            js.append("\(allowEdit), \((anchor != nil) ? anchor.getJsBase() : "null"), \((color != nil) ? color.getJsBase() : "null"), \((fill != nil) ? fill.getJsBase() : "null"), \((grid != nil) ? grid.getJsBase() : "null"), \((hatchFill != nil) ? hatchFill.getJsBase() : "null"), \(hoverGap), \((hovered != nil) ? hovered.getJsBase() : "null"), \(JsObject.wrapQuotes(value: markerType)), \(offsetX), \(offsetY), \(secondValueAnchor), \(secondXAnchor), \((selected != nil) ? selected.getJsBase() : "null"), \(size), \((stroke != nil) ? stroke.getJsBase() : "null"), \(thirdValueAnchor), \(thirdXAnchor), \((trend != nil) ? trend.getJsBase() : "null"), \((type != nil) ? type.getJsBase() : "null"), \(valueAnchor), \(xAnchor)")
        }
        public init(allowEdit: Bool, anchor: String, color: AnyColor, fill: Fill, grid: Stroke, hatchFill: anychart.graphics.vector.PatternFill, hoverGap: Double, hovered: anychart.core.StateSettings, markerType: anychart.enums.MarkerType, offsetX: Double, offsetY: Double, secondValueAnchor: Double, secondXAnchor: Double, selected: anychart.core.StateSettings, size: Double, stroke: Stroke, thirdValueAnchor: Double, thirdXAnchor: Double, trend: Stroke, type: String, valueAnchor: Double, xAnchor: Double) {
            super.init()

            js.append("\(allowEdit), \(JsObject.wrapQuotes(value: anchor)), \((color != nil) ? color.getJsBase() : "null"), \((fill != nil) ? fill.getJsBase() : "null"), \((grid != nil) ? grid.getJsBase() : "null"), \((hatchFill != nil) ? hatchFill.getJsBase() : "null"), \(hoverGap), \((hovered != nil) ? hovered.getJsBase() : "null"), \((markerType != nil) ? markerType.getJsBase() : "null"), \(offsetX), \(offsetY), \(secondValueAnchor), \(secondXAnchor), \((selected != nil) ? selected.getJsBase() : "null"), \(size), \((stroke != nil) ? stroke.getJsBase() : "null"), \(thirdValueAnchor), \(thirdXAnchor), \((trend != nil) ? trend.getJsBase() : "null"), \(JsObject.wrapQuotes(value: type)), \(valueAnchor), \(xAnchor)")
        }
        public init(allowEdit: Bool, anchor: String, color: AnyColor, fill: Fill, grid: Stroke, hatchFill: anychart.graphics.vector.PatternFill, hoverGap: Double, hovered: anychart.core.StateSettings, markerType: anychart.enums.MarkerType, offsetX: Double, offsetY: Double, secondValueAnchor: Double, secondXAnchor: Double, selected: anychart.core.StateSettings, size: Double, stroke: Stroke, thirdValueAnchor: Double, thirdXAnchor: Double, trend: Stroke, type: anychart.enums.AnnotationTypes, valueAnchor: Double, xAnchor: Double) {
            super.init()

            js.append("\(allowEdit), \(JsObject.wrapQuotes(value: anchor)), \((color != nil) ? color.getJsBase() : "null"), \((fill != nil) ? fill.getJsBase() : "null"), \((grid != nil) ? grid.getJsBase() : "null"), \((hatchFill != nil) ? hatchFill.getJsBase() : "null"), \(hoverGap), \((hovered != nil) ? hovered.getJsBase() : "null"), \((markerType != nil) ? markerType.getJsBase() : "null"), \(offsetX), \(offsetY), \(secondValueAnchor), \(secondXAnchor), \((selected != nil) ? selected.getJsBase() : "null"), \(size), \((stroke != nil) ? stroke.getJsBase() : "null"), \(thirdValueAnchor), \(thirdXAnchor), \((trend != nil) ? trend.getJsBase() : "null"), \((type != nil) ? type.getJsBase() : "null"), \(valueAnchor), \(xAnchor)")
        }
        public init(allowEdit: Bool, anchor: String, color: AnyColor, fill: Fill, grid: Stroke, hatchFill: anychart.graphics.vector.PatternFill, hoverGap: Double, hovered: anychart.core.StateSettings, markerType: String, offsetX: Double, offsetY: Double, secondValueAnchor: Double, secondXAnchor: Double, selected: anychart.core.StateSettings, size: Double, stroke: Stroke, thirdValueAnchor: Double, thirdXAnchor: Double, trend: Stroke, type: String, valueAnchor: Double, xAnchor: Double) {
            super.init()

            js.append("\(allowEdit), \(JsObject.wrapQuotes(value: anchor)), \((color != nil) ? color.getJsBase() : "null"), \((fill != nil) ? fill.getJsBase() : "null"), \((grid != nil) ? grid.getJsBase() : "null"), \((hatchFill != nil) ? hatchFill.getJsBase() : "null"), \(hoverGap), \((hovered != nil) ? hovered.getJsBase() : "null"), \(JsObject.wrapQuotes(value: markerType)), \(offsetX), \(offsetY), \(secondValueAnchor), \(secondXAnchor), \((selected != nil) ? selected.getJsBase() : "null"), \(size), \((stroke != nil) ? stroke.getJsBase() : "null"), \(thirdValueAnchor), \(thirdXAnchor), \((trend != nil) ? trend.getJsBase() : "null"), \(JsObject.wrapQuotes(value: type)), \(valueAnchor), \(xAnchor)")
        }
        public init(allowEdit: Bool, anchor: String, color: AnyColor, fill: Fill, grid: Stroke, hatchFill: anychart.graphics.vector.PatternFill, hoverGap: Double, hovered: anychart.core.StateSettings, markerType: String, offsetX: Double, offsetY: Double, secondValueAnchor: Double, secondXAnchor: Double, selected: anychart.core.StateSettings, size: Double, stroke: Stroke, thirdValueAnchor: Double, thirdXAnchor: Double, trend: Stroke, type: anychart.enums.AnnotationTypes, valueAnchor: Double, xAnchor: Double) {
            super.init()

            js.append("\(allowEdit), \(JsObject.wrapQuotes(value: anchor)), \((color != nil) ? color.getJsBase() : "null"), \((fill != nil) ? fill.getJsBase() : "null"), \((grid != nil) ? grid.getJsBase() : "null"), \((hatchFill != nil) ? hatchFill.getJsBase() : "null"), \(hoverGap), \((hovered != nil) ? hovered.getJsBase() : "null"), \(JsObject.wrapQuotes(value: markerType)), \(offsetX), \(offsetY), \(secondValueAnchor), \(secondXAnchor), \((selected != nil) ? selected.getJsBase() : "null"), \(size), \((stroke != nil) ? stroke.getJsBase() : "null"), \(thirdValueAnchor), \(thirdXAnchor), \((trend != nil) ? trend.getJsBase() : "null"), \((type != nil) ? type.getJsBase() : "null"), \(valueAnchor), \(xAnchor)")
        }

    }
}